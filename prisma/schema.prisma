// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  username       String
  password       String
  firstName      String
  lastName       String?
  githubLink     String?
  linkedinLink   String?
  email          String   @unique
  emailVerified  DateTime?
  image          String?
  adminCreate    Admin?    @relation("adminCreate", fields: [createdBy], references: [id])
  adminUpdate    Admin?    @relation("adminUpdate", fields: [updatedBy], references: [id])
  createdAt      DateTime?
  createdBy      String?
  updatedAt      DateTime?
  updatedBy      String?
  accounts       Account[]
  sessions       Session[]
}

model Admin {
  id                  String    @id @default(cuid())
  username            String
  password            String
  name                String
  otherAdminCreate    Admin?    @relation("otherAdminCreate", fields: [createdBy], references: [id])
  otherAdminUpdate    Admin?    @relation("otherAdminUpdate", fields: [updatedBy], references: [id])
  createdAt           DateTime?
  createdBy           String?
  updatedAt           DateTime?
  updatedBy           String?
  usersCreated        User[]    @relation("adminCreate")
  usersUpdated        User[]    @relation("adminUpdate")
  adminCreated        Admin[]   @relation("otherAdminCreate")
  adminUpdated        Admin[]   @relation("otherAdminUpdate")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
